{
    // Multi-language workspace settings for Pet Health Tracker project
    
    // Python Configuration
    "python.defaultInterpreterPath": "./venv/bin/python",
    "python.terminal.activateEnvironment": true,
    "python.terminal.activateEnvInCurrentTerminal": true,
    
    // Flutter & Dart Settings
    "dart.flutterSdkPath": null,
    "dart.debugExternalPackageLibraries": false,
    "dart.debugSdkLibraries": false,
    "dart.insertArgumentPlaceholders": true,
    "dart.enableSnippets": true,
    "dart.lineLength": 80,
    "dart.showTodos": true,
    "dart.allowAnalytics": false,
    "dart.previewFlutterUiGuides": true,
    "dart.previewFlutterUiGuidesCustomTracking": true,
    "dart.hotReloadOnSave": "always",
    "dart.openDevTools": "flutter",
    "dart.flutterOutline": true,
    "dart.closingLabels": true,
    
    // Linting and Formatting
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": true,
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": ["--line-length", "88"],
    "python.sortImports.args": ["--profile", "black"],
    
    // Editor Settings
    "editor.formatOnSave": true,
    "editor.formatOnType": false,
    "editor.formatOnPaste": false,
    "editor.rulers": [80, 88, 120],
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit",
        "source.fixAll": "explicit"
    },
    
    // File Associations
    "files.associations": {
        "*.py": "python",
        "*.dart": "dart",
        ".env*": "dotenv",
        "Dockerfile*": "dockerfile",
        "docker-compose*.yml": "dockercompose",
        "requirements*.txt": "pip-requirements",
        "pubspec.yaml": "yaml",
        "pubspec.lock": "yaml",
        "analysis_options.yaml": "yaml"
    },
    
    // File Exclusions
    "files.exclude": {
        "**/__pycache__": true,
        "**/*.pyc": true,
        "**/.pytest_cache": true,
        "**/venv": false,
        "**/.venv": true,
        "**/*.egg-info": true,
        "**/node_modules": true,
        "**/.coverage": true,
        "**/htmlcov": true,
        "**/.mypy_cache": true,
        // Flutter exclusions
        "**/pet_health_tracker/build": true,
        "**/pet_health_tracker/.dart_tool": true
    },
    
    // Search Exclusions
    "search.exclude": {
        // Python exclusions
        "**/venv": true,
        "**/.venv": true,
        "**/__pycache__": true,
        "**/*.pyc": true,
        "**/.pytest_cache": true,
        "**/*.egg-info": true,
        "**/node_modules": true,
        "**/.mypy_cache": true,
        // Flutter exclusions
        "**/pet_health_tracker/build": true,
        "**/pet_health_tracker/.dart_tool": true,
        "**/pet_health_tracker/android/.gradle": true,
        "**/pet_health_tracker/ios/Pods": true,
        "**/pet_health_tracker/ios/.symlinks": true,
        "**/pet_health_tracker/ios/Flutter/flutter_assets": true,
        "**/pet_health_tracker/ios/Runner.xcworkspace": true,
        "**/pet_health_tracker/web/packages": true
    },
    
    // FastAPI Specific
    "rest-client.environmentVariables": {
        "local": {
            "baseUrl": "http://localhost:8000",
            "token": ""
        },
        "dev": {
            "baseUrl": "http://localhost:8000",
            "token": ""
        }
    },
    
    // Auto Save
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    
    // Testing
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": [
        "tests"
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    
    // IntelliSense
    "python.analysis.autoImportCompletions": true,
    "python.analysis.extraPaths": ["./app"],
    "python.analysis.typeCheckingMode": "basic",
    
    // Code Actions
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    
    // Terminal
    "terminal.integrated.env.osx": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.linux": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    
    // JSON Schema Associations
    "json.schemas": [
        {
            "fileMatch": [
                "/.vscode/launch.json"
            ],
            "url": "vscode://schemas/launch"
        },
        {
            "fileMatch": [
                "/.vscode/tasks.json"
            ],
            "url": "vscode://schemas/tasks"
        }
    ],
    
    // Extension Recommendations
    "extensions.recommendations": [
        // Flutter & Dart
        "dart-code.dart-code",
        "dart-code.flutter",
        "felixangelov.bloc",
        // Python & FastAPI
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        // API Development
        "humao.rest-client",
        "rangav.vscode-thunder-client",
        // General Development
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-vscode.makefile-tools",
        "streetsidesoftware.code-spell-checker",
        "ms-vscode.vscode-markdown",
        "gruntfuggly.todo-tree",
        "ms-vscode.vscode-icons",
        // Git
        "mhutchie.git-graph",
        "eamodio.gitlens"
    ],
    
    // Workspace Trust
    "security.workspace.trust.untrustedFiles": "open",
    
    // Git
    "git.ignoreLimitWarning": true,
    
    // Emmet
    "emmet.includeLanguages": {
        "jinja-html": "html",
        "dart": "html"
    },
    
    // Language-specific settings
    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.rulers": [80],
        "editor.selectionHighlight": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": "off"
    },
    
    "[yaml]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "advanced"
    },
    
    // TODO Tree Settings
    "todo-tree.filtering.excludeGlobs": [
        "**/vendor/**",
        "**/node_modules/**",
        "**/dist/**",
        "**/bower_components/**",
        "**/build/**",
        "**/.vscode/**",
        "**/.github/**",
        "**/venv/**",
        "**/__pycache__/**",
        "**/pet_health_tracker/build/**",
        "**/pet_health_tracker/.dart_tool/**"
    ],
    "todo-tree.general.tags": [
        "BUG",
        "HACK", 
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]",
        "NOTE",
        "REVIEW"
    ]
}